{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/map/map.service.ts","webpack:///./src/app/services/web.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MainComponent } from './main/main.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/main', pathMatch: 'full' },\n  { path: 'main', component: MainComponent },\n  { path: 'dashboard', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \".bg-gray{\\n  background-color: #f1eded;\\n}\\n.btn-circle{\\n  border-radius: 50%;\\n}\\n.btn-circle i:before{\\n  -webkit-transform: scale(2);\\n          transform: scale(2);\\n}\\n.container-data{\\n  height: calc(100% - 79px);\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg bg-white p-0\\\">\\n  <div class=\\\"w-100 d-flex justify-content-between\\\">\\n    <ul role=\\\"tablist\\\" class=\\\"nav nav-tabs justify-content-start\\\">\\n      <li class=\\\"nav-item p-2\\\">\\n        <a routerLink=\\\"/main\\\" class=\\\"navbar-brand\\\"><img src=\\\"assets/logo.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\"><span><strong>Find</strong> my<br/>cryosphere</span></a>\\n      </li>\\n      <li class=\\\"nav-item ml-5 d-flex\\\">\\n        <a class=\\\"nav-link d-flex align-items-center\\\" routerLink=\\\"/main\\\" routerLinkActive=\\\"active\\\">Map View</a>\\n      </li>\\n      <li class=\\\"nav-item d-flex\\\">\\n        <a class=\\\"nav-link d-flex align-items-center\\\" routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\">Dashboard</a>\\n      </li>\\n    </ul>\\n      <!-- <form class=\\\"form-inline w-50 justify-content-end p-2\\\">\\n        <input #searchEl class=\\\"w-50 form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search location...\\\" aria-label=\\\"Search\\\">\\n        <button class=\\\"btn btn-primary btn-circle\\\" type=\\\"submit\\\"><i class=\\\"mdi mdi-magnify\\\"></i></button>\\n      </form> -->\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MapService } from './map/map.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  // @ViewChild('searchEl') searchRef;\n  constructor(private mapService: MapService) {}\n  ngOnInit() {\n    this.mapService.getMapSubject().subscribe((map) => {\n      // if (map) {\n      //   this.mapService.setGeocodingUIConf(this.searchRef.nativeElement);\n      // }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport {HttpModule} from '@angular/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { MapComponent } from './map/map.component';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MainComponent } from './main/main.component';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    DashboardComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    Ng5SliderModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    NgbModule,\n    NgxChartsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid container-data bg-gray\\\">\\n  <div class=\\\"row h-100\\\">\\n    <div class=\\\"col-md-6 p-3 h-100\\\">\\n      <div class=\\\"card p-5\\\">\\n        <h5>Rainfall level per year <br/><small>http://www.senamhi.gob.bo/sismet</small></h5>\\n        <ngx-charts-bubble-chart\\n        [view]=\\\"[600, 450]\\\"\\n        [results]=\\\"hampaturi\\\"\\n        [showGridLines]=\\\"true\\\"\\n        [legend]=\\\"false\\\"\\n        >\\n        </ngx-charts-bubble-chart>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 p-3 h-100\\\">\\n      <div class=\\\"card p-5\\\">\\n        <h5>Percentage of ice per area <br/><small>http://www.senamhi.gob.bo/sismet</small></h5>\\n        <ngx-charts-area-chart-stacked\\n          [view]=\\\"[600, 450]\\\"\\n          [scheme]=\\\"colorScheme\\\"\\n          [results]=\\\"multi\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [xAxis]=\\\"showXAxis\\\"\\n          [yAxis]=\\\"showYAxis\\\"\\n          [legend]=\\\"showLegend\\\"\\n          [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n          [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n          [xAxisLabel]=\\\"'Year'\\\"\\n          [yAxisLabel]=\\\"'Ammount'\\\">\\n        </ngx-charts-area-chart-stacked>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"row h-50\\\">\\n    <div class=\\\"col-md-12 p-3\\\">\\n      <div class=\\\"card\\\">\\n        <ngx-charts-area-chart-stacked\\n          width=\\\"100%\\\"\\n          [view]=\\\"view\\\"\\n          [scheme]=\\\"colorScheme\\\"\\n          [results]=\\\"multi\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [xAxis]=\\\"showXAxis\\\"\\n          [yAxis]=\\\"showYAxis\\\"\\n          [legend]=\\\"showLegend\\\"\\n          [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n          [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n          [xAxisLabel]=\\\"xAxisLabel\\\"\\n          [yAxisLabel]=\\\"yAxisLabel\\\"\\n        >\\n        </ngx-charts-area-chart-stacked>\\n      </div>\\n    </div>\\n  </div> -->\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { single, multi, hampaturi } from '../data';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  single: any[];\n  multi: any[];\n  hampaturi: any[];\n\n  view: any[] = [550, 300];\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'Population';\n\n  colorScheme = {\n    domain: ['#4fcfff', '#ba5706', '#7fd5d2', '#AAAAAA']\n  };\n  // line, area\n  autoScale = true;\n\n  constructor() { Object.assign(this, {single, multi, hampaturi});}\n\n  ngOnInit() {\n  }\n\n}\n","export var single = [\n  {\n    \"name\": \"Germany\",\n    \"value\": 8940000\n  },\n  {\n    \"name\": \"USA\",\n    \"value\": 5000000\n  },\n  {\n    \"name\": \"France\",\n    \"value\": 7200000\n  }\n];\n\nexport var multi = [\n  {\n    \"name\": \"Water\",\n    \"series\": [\n      {\n        \"name\": \"2010\",\n        \"value\": 7300000\n      },\n      {\n        \"name\": \"2011\",\n        \"value\": 8940000\n      }\n    ]\n  },\n\n  {\n    \"name\": \"Land\",\n    \"series\": [\n      {\n        \"name\": \"2010\",\n        \"value\": 7870000\n      },\n      {\n        \"name\": \"2011\",\n        \"value\": 8270000\n      }\n    ]\n  },\n\n  {\n    \"name\": \"Ice\",\n    \"series\": [\n      {\n        \"name\": \"2010\",\n        \"value\": 5000002\n      },\n      {\n        \"name\": \"2011\",\n        \"value\": 5800000\n      }\n    ]\n  }\n];\n\nexport var hampaturi = [\n  {\n    \"name\": \"Datos 2000\",\n    \"series\": [\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"January\",\n        \"r\": 19\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"February\",\n        \"r\": 14\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"March\",\n        \"r\": 19\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"April\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"May\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"June\",\n        \"r\": 3\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"July\",\n        \"r\": 2\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"August\",\n        \"r\": 8\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"September\",\n        \"r\": 2\n      },\n{\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"October\",\n        \"r\": 18\n      },\n      {\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"September\",\n        \"r\": 7\n      },\n{\n        \"name\": \"2000\",\n        \"x\": \"2000\",\n        \"y\": \"December\",\n        \"r\": 23\n      }\n    ]\n  },\n  {\n    \"name\": \"Datos 2001\",\n    \"series\": [\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"January\",\n        \"r\": 30\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"February\",\n        \"r\": 21\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"March\",\n        \"r\": 20\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"April\",\n        \"r\": 7\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"May\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"June\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"July\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"August\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"September\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"October\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"September\",\n        \"r\": 17\n      },\n      {\n        \"name\": \"2001\",\n        \"x\": \"2001\",\n        \"y\": \"December\",\n        \"r\": 0\n      }\n    ]\n  },\n {\n    \"name\": \"Datos 2002\",\n    \"series\": [\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"January\",\n        \"r\": 20\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"February\",\n        \"r\": 20\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"March\",\n        \"r\": 22\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"April\",\n        \"r\": 18\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"May\",\n        \"r\": 5\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"June\",\n        \"r\": 6\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"July\",\n        \"r\": 13\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"August\",\n        \"r\": 12\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"September\",\n        \"r\": 11\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"October\",\n        \"r\": 18\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"September\",\n        \"r\": 19\n      },\n      {\n        \"name\": \"2002\",\n        \"x\": \"2002\",\n        \"y\": \"December\",\n        \"r\": 23\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2003\",\n    \"series\": [\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"January\",\n        \"r\": 24\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"February\",\n        \"r\": 21\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"March\",\n        \"r\": 26\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"April\",\n        \"r\": 14\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"May\",\n        \"r\": 4\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"June\",\n        \"r\": 1\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"July\",\n        \"r\": 2\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"August\",\n        \"r\": 5\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"September\",\n        \"r\": 13\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"October\",\n        \"r\": 8\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"September\",\n        \"r\": 15\n      },\n      {\n        \"name\": \"2003\",\n        \"x\": \"2003\",\n        \"y\": \"December\",\n        \"r\": 21\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2004\",\n    \"series\": [\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"January\",\n        \"r\": 29\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"February\",\n        \"r\": 21\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"March\",\n        \"r\": 17\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"April\",\n        \"r\": 13\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"May\",\n        \"r\": 3\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"June\",\n        \"r\": 3\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"July\",\n        \"r\": 6\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"August\",\n        \"r\": 10\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"September\",\n        \"r\": 10\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"October\",\n        \"r\": 7\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"September\",\n        \"r\": 14\n      },\n      {\n        \"name\": \"2004\",\n        \"x\": \"2004\",\n        \"y\": \"December\",\n        \"r\": 25\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2005\",\n    \"series\": [\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"January\",\n        \"r\": 27\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"February\",\n        \"r\": 22\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"March\",\n        \"r\": 15\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"April\",\n        \"r\": 13\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"May\",\n        \"r\": 2\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"June\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"July\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"August\",\n        \"r\": 1\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"September\",\n        \"r\": 11\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"October\",\n        \"r\": 20\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"September\",\n        \"r\": 18\n      },\n      {\n        \"name\": \"2005\",\n        \"x\": \"2005\",\n        \"y\": \"December\",\n        \"r\": 17\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2006\",\n    \"series\": [\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"January\",\n        \"r\": 28\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"February\",\n        \"r\": 22\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"March\",\n        \"r\": 24\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"April\",\n        \"r\": 14\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"May\",\n        \"r\": 1\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"June\",\n        \"r\": 3\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"July\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"August\",\n        \"r\": 7\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"September\",\n        \"r\": 5\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"October\",\n        \"r\": 15\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"September\",\n        \"r\": 23\n      },\n      {\n        \"name\": \"2006\",\n        \"x\": \"2006\",\n        \"y\": \"December\",\n        \"r\": 26\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2007\",\n    \"series\": [\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"January\",\n        \"r\": 22\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"February\",\n        \"r\": 21\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"March\",\n        \"r\": 27\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"April\",\n        \"r\": 17\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"May\",\n        \"r\": 5\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"June\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"July\",\n        \"r\": 5\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"August\",\n        \"r\": 2\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"September\",\n        \"r\": 19\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"October\",\n        \"r\": 12\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"September\",\n        \"r\": 17\n      },\n      {\n        \"name\": \"2007\",\n        \"x\": \"2007\",\n        \"y\": \"December\",\n        \"r\": 21\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2008\",\n    \"series\": [\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"January\",\n        \"r\": 28\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"February\",\n        \"r\": 24\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"March\",\n        \"r\": 18\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"April\",\n        \"r\": 5\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"May\",\n        \"r\": 5\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"June\",\n        \"r\": 2\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"July\",\n        \"r\": 1\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"August\",\n        \"r\": 1\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"September\",\n        \"r\": 2\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"October\",\n        \"r\": 11\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"September\",\n        \"r\": 10\n      },\n      {\n        \"name\": \"2008\",\n        \"x\": \"2008\",\n        \"y\": \"December\",\n        \"r\": 23\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2009\",\n    \"series\": [\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"January\",\n        \"r\": 22\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"February\",\n        \"r\": 22\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"March\",\n        \"r\": 24\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"April\",\n        \"r\": 17\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"May\",\n        \"r\": 3\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"June\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"July\",\n        \"r\": 2\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"August\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"September\",\n        \"r\": 6\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"October\",\n        \"r\": 11\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"September\",\n        \"r\": 16\n      },\n      {\n        \"name\": \"2009\",\n        \"x\": \"2009\",\n        \"y\": \"December\",\n        \"r\": 21\n      }\n    ]\n  },\n{\n    \"name\": \"Datos 2010\",\n    \"series\": [\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"January\",\n        \"r\": 28\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"February\",\n        \"r\": 21\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"March\",\n        \"r\": 19\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"April\",\n        \"r\": 11\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"May\",\n        \"r\": 11\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"June\",\n        \"r\": 1\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"July\",\n        \"r\": 1\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"August\",\n        \"r\": 0\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"September\",\n        \"r\": 4\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"October\",\n        \"r\": 7\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"September\",\n        \"r\": 8\n      },\n      {\n        \"name\": \"2010\",\n        \"x\": \"2010\",\n        \"y\": \"December\",\n        \"r\": 24\n      }\n    ]\n  }\n]\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-data\\\">\\n  <div class=\\\"row no-gutters h-100\\\">\\n    <div class=\\\"col-md-4 bg-gray tabset-fixed\\\">\\n\\n      <ngb-tabset>\\n        <ngb-tab title=\\\"Data\\\">\\n            <ng-template ngbTabContent>\\n              <div class=\\\"card p-3\\\">\\n                <label>Filter By Year</label>\\n                <button class=\\\"btn-success mb-4\\\" (click)=\\\"onSetFilterByYear()\\\">Generate</button>\\n                <div [hidden]=\\\"hideFilterByYearData\\\">\\n                  <div class=\\\"mb-2\\\">\\n                    <label>Years</label>\\n                    <ng5-slider [(value)]=\\\"value\\\" [options]=\\\"options\\\" (userChange)=\\\"onSliderChange($event)\\\"></ng5-slider>\\n                  </div>\\n                  <ngx-charts-area-chart-stacked\\n                    width=\\\"100%\\\"\\n                    [hidden]=\\\"multi.length === 0\\\"\\n                    [view]=\\\"view\\\"\\n                    [scheme]=\\\"colorScheme\\\"\\n                    [results]=\\\"multi\\\"\\n                    [gradient]=\\\"gradient\\\"\\n                    [xAxis]=\\\"showXAxis\\\"\\n                    [yAxis]=\\\"showYAxis\\\"\\n                    [legend]=\\\"showLegend\\\"\\n                    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                    [xAxisLabel]=\\\"xAxisLabel\\\"\\n                    [yAxisLabel]=\\\"yAxisLabel\\\"\\n                    (select)=\\\"onSelect($event)\\\">\\n                  </ngx-charts-area-chart-stacked>\\n                </div>\\n              </div>\\n            </ng-template>\\n          </ngb-tab>\\n        <!-- <ngb-tab title=\\\"Filters\\\">\\n          <ng-template ngbTabContent>\\n            <div class=\\\"card p-3\\\">\\n              <div class=\\\"btn-group btn-group-toggle\\\" ngbRadioGroup [(ngModel)]=\\\"countrySelected\\\" (ngModelChange)=\\\"onChangeCountry($event)\\\">\\n                  <label ngbButtonLabel class=\\\"btn btn-sm btn-success\\\">\\n                    <input ngbButton type=\\\"radio\\\" value=\\\"argentina\\\"> Argentina\\n                  </label>\\n                  <label ngbButtonLabel class=\\\"btn btn-sm btn-warning\\\">\\n                    <input ngbButton type=\\\"radio\\\" value=\\\"canada\\\"> Canada\\n                  </label>\\n                  <label ngbButtonLabel class=\\\"btn btn-sm btn-primary\\\">\\n                    <input ngbButton type=\\\"radio\\\" value=\\\"rusia\\\"> Rusia\\n                  </label>\\n                </div>\\n            </div>\\n          </ng-template>\\n        </ngb-tab> -->\\n        <ngb-tab title=\\\"Images\\\">\\n          <ng-template ngbTabContent>\\n            <div class=\\\"card\\\">\\n              <p class=\\\"p-4\\\">The cryosphere is those portions of Earth's surface where water is in solid form, including sea ice, lake ice, river ice, snow cover, glaciers, ice caps, ice sheets, and frozen ground.</p>\\n              <img width=\\\"100%\\\" height=\\\"auto\\\" src=\\\"https://www.nasa.gov/sites/default/files/thumbnails/image/seaicemin18_twitter_2_0.gif\\\"/>\\n              <ngb-carousel *ngIf=\\\"images\\\">\\n                <ng-template ngbSlide>\\n                  <img [src]=\\\"images[0]\\\" alt=\\\"Random first slide\\\">\\n                </ng-template>\\n                <ng-template ngbSlide>\\n                  <img [src]=\\\"images[1]\\\" alt=\\\"Random second slide\\\">\\n                </ng-template>\\n                <ng-template ngbSlide>\\n                  <img [src]=\\\"images[2]\\\" alt=\\\"Random third slide\\\">\\n                </ng-template>\\n\\n              </ngb-carousel>\\n            </div>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"About\\\">\\n          <ng-template ngbTabContent>\\n            <div class=\\\"card p-5\\\">\\n              <p>This project was developed for the Cryoning Devs</p>\\n              <p>Enjoy!</p>\\n              <h1><i class=\\\"mdi mdi-linux\\\"></i></h1>\\n            </div>\\n          </ng-template>\\n        </ngb-tab>\\n      </ngb-tabset>\\n\\n    </div>\\n    <div class=\\\"col-md-8 h-100\\\">\\n      <div class=\\\"btn-group btn-group-toggle fixed-layers\\\" ngbRadioGroup [(ngModel)]=\\\"countrySelected\\\" (ngModelChange)=\\\"onChangeCountry($event)\\\">\\n          <label ngbButtonLabel class=\\\"btn btn-sm btn-success\\\">\\n            <input ngbButton type=\\\"radio\\\" value=\\\"argentina\\\"> Argentina\\n          </label>\\n          <label ngbButtonLabel class=\\\"btn btn-sm btn-warning\\\">\\n            <input ngbButton type=\\\"radio\\\" value=\\\"canada\\\"> Canada\\n          </label>\\n          <label ngbButtonLabel class=\\\"btn btn-sm btn-primary\\\">\\n            <input ngbButton type=\\\"radio\\\" value=\\\"rusia\\\"> Rusia\\n          </label>\\n      </div>\\n      <div class=\\\"btn-group btn-group-toggle fixed-layers-top\\\" style=\\\"background: #DDDDDD; border-radius: 5px; padding: 5px;\\\">\\n        <!-- <label ngbButtonLabel class=\\\"btn btn-sm btn-primary\\\">\\n          <input ngbButton type=\\\"radio\\\" value=\\\"SMAP_L4_Snow_Mass\\\"> Snow Mass\\n        </label>\\n        <label ngbButtonLabel class=\\\"btn btn-sm btn-primary\\\">\\n          <input ngbButton type=\\\"radio\\\" value=\\\"MODIS_Terra_NDSI_Snow_Cover\\\"> Snow Cover\\n        </label> -->\\n        <h5 [hidden]=\\\"distanceInMeters == null\\\">Minimum distance in km: {{distanceInMeters}}</h5>\\n        <!-- <label ngbButtonLabel class=\\\"btn btn-sm btn-primary\\\">\\n          <input ngbButton type=\\\"radio\\\" value=\\\"SMAP_L4_Frozen_Area\\\"> Frozen Area\\n        </label> -->\\n      </div>\\n      <app-map [dataLayerSelected]=\\\"dataLayerSelected\\\"></app-map>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Options, LabelType, CustomStepDefinition, ChangeContext } from 'ng5-slider';\nimport { WebService } from './../services/web.service';\nimport { MapService } from './../map/map.service';\n// import { single, multi } from '../data';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit, OnChanges {\n  countrySelected = '';\n  dataLayerSelected = 'SMAP_L4_Frozen_Area';\n  distanceInMeters = null;\n  hideFilterByYearData = true;\n  layersByYear = [];\n  title = 'cryosphere-frontend';\n  value = 10;\n  years = [];\n  options: Options = {\n    floor: 0,\n    ceil: 100,\n    showTicks: true\n  };\n  optionTimer;\n  images = [1, 2, 3].map(() => `https://gibs.earthdata.nasa.gov/wmts/epsg4326/best/MODIS_Terra_CorrectedReflectance_TrueColor/default/2018-07-09/250m/6/13/${Math.floor((Math.random()*40)+1)}.jpg`);\n  single: any[];\n  multi: any[] = [];\n\n  view: any[] = [470, 400];\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = true;\n  xAxisLabel = 'Time';\n  showYAxisLabel = true;\n  yAxisLabel = 'Area Percentage';\n\n  colorScheme = {\n    domain: ['#8F73F1', '#D56F59', '#A5D4FF']\n  };\n\n  // line, area\n  autoScale = true;\n\n  constructor(private mapService: MapService, private webService: WebService) {}\n\n  onSelect(event) {\n    console.log(event);\n  }\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {}\n  onChangeCountry($event) {\n    this.mapService.getNearestCryosphreByUserLocation($event).then((data) => {\n      this.distanceInMeters = data;\n    });\n  }\n\n  onSetFilterByYear() {\n    this.mapService.getMapSubject().subscribe((mapObj) => {\n      if (mapObj) {\n        this.mapService.getMapOverlay().clear();\n        this.mapService.clearGeoCodingMarkers();\n        this.mapService.clearShortestPolylines();\n        this.mapService.setImageLayerDataByYears();\n        this.setSliderValuesByYear();\n        // this.saveLayersForAPI().then((data) => {\n          // if (data) {\n        this.sendCryosphereDataByYear();\n          // }\n        // });\n        this.hideFilterByYearData = false;\n      }\n    });\n  }\n  onSliderChange(changeContext: ChangeContext): void {\n    const overlays = this.mapService.getMapOverlay().getArray() as google.maps.ImageMapType[];\n    overlays.forEach((val, idx) => {\n      if (this.years.indexOf(changeContext.value) === idx) {\n        val.setOpacity(0.5);\n      } else {\n        val.setOpacity(0);\n      }\n    });\n  }\n  saveLayersForAPI() {\n    return this.mapService.saveDataLayerForAPI();\n  }\n  sendCryosphereDataByYear() {\n    this.webService.sendCryosphereDataByYear().toPromise().then((response) => {\n      console.log('Processed successfully');\n      const data = JSON.parse(response['_body']).data;\n      this.multi = data;\n    });\n  }\n  setSliderValuesByYear() {\n    this.years = this.mapService.getYearSet();\n    this.value = this.years[0];\n    if (this.optionTimer) { clearTimeout(this.optionTimer); }\n    this.optionTimer = setTimeout(() => {\n      const newOptions = Object.assign({}, this.options);\n      newOptions.floor = this.years[0];\n      newOptions.ceil = this.years[this.years.length - 1];\n      newOptions.maxLimit = newOptions.ceil;\n      this.options = newOptions;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div #map id=\\\"map\\\" class=\\\"w-100 h-100\\\"></div>\\n\"","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport {Observable, of, pipe} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {MapService} from './map.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  @Input() dataLayerSelected;\n  @ViewChild('map') gmapElement: ElementRef;\n  map: google.maps.Map;\n  mapProm: Promise<any>;\n\n  constructor(private gmapService: MapService) { }\n\n  ngOnInit() {\n    this.mapProm = this.gmapService.initMap(this.gmapElement.nativeElement, {\n      center: {lat: -16.5214, lng: -67.253},\n      scrollwheel: true,\n      zoom: 5,\n      maxZoom: 10\n    });\n    this.mapProm.then(() => {\n      this.map = this.gmapService.getMap();\n      // this.gmapService.setMapClickEv();\n      this.gmapService.setImageLayer(this.dataLayerSelected);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport html2canvas from 'html2canvas';\n\nimport { WebService } from './../services/web.service';\n\nconst getScriptSrc = (callbackName) => {\n  return `https://maps.googleapis.com/maps/api/js?key=AIzaSyDx92iaKUnowpTZOLt1FGAJqi98picikH8` +\n    `&libraries=places,geometry&callback=${callbackName}`;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n  private mapSubject: BehaviorSubject<any> = new BehaviorSubject(null);\n  private map: google.maps.Map;\n  private geocoder: google.maps.Geocoder;\n  private scriptLoadingPromise: Promise<any>;\n  private layerConf = {\n    'SMAP_L4_Snow_Mass': {\n      gMapsLevel: 'GoogleMapsCompatible_Level6'\n    },\n    'MODIS_Terra_NDSI_Snow_Cover': {\n      gMapsLevel: 'GoogleMapsCompatible_Level8'\n    },\n    'SMAP_L4_Frozen_Area': {\n      gMapsLevel: 'GoogleMapsCompatible_Level6',\n      minDate: '2015/04/13'\n    }\n  };\n  private shortestLine;\n  private markers = [\n    // Canada\n    {\n      name: 'canada',\n      userCoor: [49.02147022636165, -106.33994195686506],\n      mapBBCoor: [[29.75101149258984, -129.133139588701], [56.93657550056194, -74.78789422737287]]\n    },\n    // Rusia\n    {\n      name: 'rusia',\n      userCoor: [67.9047751553543, 104.27632993158204],\n      mapBBCoor: [[59.66743389230126, 75.6823510497461], [73.61522579262414, 130.02759641107423]]\n    },\n    // Argentina\n    {\n      name: 'argentina',\n      userCoor: [-29.613533047982706, -68.58363456147652],\n      mapBBCoor: [[-37.71648323826961, -77.87085837739448], [-22.083171630144744, -50.69823569673042]]\n    }\n  ];\n  private searchBox;\n  private geoCodingMarkers = [];\n  private yearSet = [];\n  private layersByYear = [];\n\n  constructor(private webService: WebService, private mapService: MapService) {\n    this.loadScriptLoadingPromise();\n    this.onReady().then(() => {\n      this.geocoder = new google.maps.Geocoder();\n    });\n  }\n\n  onReady(): Promise<any> {\n    return this.scriptLoadingPromise;\n  }\n\n  clearGeoCodingMarkers() {\n    // Clear out the old markers.\n    this.geoCodingMarkers.forEach((marker) => {\n      marker.setMap(null);\n    });\n    this.geoCodingMarkers = [];\n  }\n  clearShortestPolylines() {\n    if (this.shortestLine) {\n      this.shortestLine.setMap(null);\n    }\n  }\n\n  initMap(mapHtmlElement: HTMLElement, options: google.maps.MapOptions): Promise<google.maps.Map> {\n    return this.onReady().then(() => {\n      this.map = new google.maps.Map(mapHtmlElement, options);\n      this.mapSubject.next(this.map);\n      return this.map;\n    });\n  }\n\n  getNearestCryosphreByUserLocation(country) {\n    const countryData = this.markers.filter(val => val.name === country)[0];\n    const {mapBBCoor, userCoor, name} = countryData;\n    const data = {\n      boundingBox: mapBBCoor,\n      userLocation: userCoor,\n      image: { imageName: name}\n    };\n    this.clearGeoCodingMarkers();\n    this.clearShortestPolylines();\n    this.getMapOverlay().clear();\n    this.setImageLayer('SMAP_L4_Frozen_Area');\n    const latLng = new google.maps.LatLng(userCoor[0], userCoor[1]);\n    this.geoCodingMarkers.push(new google.maps.Marker({\n      position: latLng,\n      map: this.map\n    }));\n    this.map.setCenter(latLng);\n    return this.webService.sendCryosphereData(data).toPromise().then(response => {\n      const point = JSON.parse(response['_body']).data;\n      this.drawLineBetweenTwoPoints(userCoor, point);\n      return this.getDistanceTwoPoints(userCoor, point);\n    });\n  }\n\n  getCurrentDateStringFormat() {\n    const currentDate = new Date();\n    currentDate.setHours(0);\n    currentDate.setMinutes(0);\n    currentDate.setSeconds(0);\n    currentDate.setMilliseconds(0);\n    const monthVal = currentDate.getMonth() + 1;\n    const monthText = monthVal < 10 ? `0${monthVal}` : monthVal;\n    return currentDate.getFullYear() + '-' + monthText + '-' + '07';\n  }\n\n  getMapSubject(): Observable<any> {\n    return this.mapSubject.asObservable();\n  }\n\n  getMap() {\n    return this.map;\n  }\n\n  getMapBounds() {\n    return this.map.getBounds();\n  }\n\n  getMapOverlay() {\n    return this.map.overlayMapTypes;\n  }\n\n  getUserMarker() {\n    return this.geoCodingMarkers.length > 0 ? this.geoCodingMarkers[0] : null;\n  }\n\n  getTileUrl(layerConf, date): (tileCord: google.maps.Point, zoom: Number) => string {\n    const type = layerConf.name;\n    const gMapsLevel = layerConf.gMapsLevel;\n    return (tile, zoom) => {\n      return `//gibs.earthdata.nasa.gov/wmts/epsg3857/best/${type}/default/${date}` +\n        `/${gMapsLevel}/${zoom}/${tile.y}/${tile.x}.png`;\n    };\n  }\n\n  getYearSet() {\n    return this.yearSet;\n  }\n\n  private radians(x) {\n    return x * Math.PI / 180;\n  }\n\n  getDistanceTwoPoints(p1, p2) {\n    const R = 6378137; // Earth’s mean radius in meter\n    const dLat = this.radians(p2[0] - p1[0]);\n    const dLong = this.radians(p2[1] - p1[1]);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(this.radians(p1[0])) * Math.cos(this.radians(p2[0])) *\n      Math.sin(dLong / 2) * Math.sin(dLong / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return ((R * c) / 1000).toFixed(2);\n  }\n\n  drawLineBetweenTwoPoints(p1, p2) {\n    this.shortestLine = new google.maps.Polyline({\n      path: [new google.maps.LatLng(p1[0], p1[1]), new google.maps.LatLng(p2[0], p2[1])],\n      strokeColor: '#000000',\n      strokeOpacity: 1.0,\n      strokeWeight: 10,\n      geodesic: true,\n      map: this.map\n    });\n  }\n\n  sendNearestCryosphereData() {\n    const userLocation = this.getUserMarker();\n    const userCoor = [userLocation.position.lat(), userLocation.position.lng()];\n    const mapBBox = this.getMapBounds();\n    const mapBBoxNE = mapBBox.getNorthEast();\n    const mapBBoxSW = mapBBox.getSouthWest();\n    const mapBBCoor = [[mapBBoxSW.lat(), mapBBoxSW.lng()], [mapBBoxNE.lat(), mapBBoxNE.lng()]];\n    this.setImageLayer('SMAP_L4_Frozen_Area');\n    // this.saveDataLayerForAPI().then(data => {\n      // this.webService.sendCryosphereData(userCoor, mapBBCoor).toPromise().then((data) => {\n        // console.log(data);\n        // console.log('Processed Succesfully');\n      // });\n    // });\n  }\n\n  saveDataLayerForAPI() {\n    this.layersByYear = [];\n    return new Promise((resolve, reject) => {\n      const overlays = this.getMapOverlay().getArray() as google.maps.ImageMapType[];\n      overlays.forEach((val, idx, arr) => {\n        val.setOpacity(1);\n        setTimeout(() => {\n          html2canvas(document.getElementById('map')).then((canvas) => {\n            const layerData =  {\n              imageName: idx,\n              encodedImage: canvas.toDataURL('image/png'),\n              dateImage: this.yearSet[idx]\n            };\n            this.layersByYear.push(layerData);\n            val.setOpacity(0);\n            if (idx === arr.length - 1) {\n              resolve(this.layersByYear);\n            }\n          });\n        }, 3000);\n      });\n    });\n  }\n\n  setImageLayer(dataLayer, dateString?, isDateRange?): void {\n    const layerInfo = {\n      name: dataLayer,\n      gMapsLevel: this.layerConf[dataLayer].gMapsLevel\n    };\n    dateString = dateString || this.getCurrentDateStringFormat();\n    const getTileUrl = this.getTileUrl(layerInfo, dateString);\n    const layerOptions = {\n      alt: dataLayer,\n      getTileUrl: getTileUrl,\n      maxZoom: 10,\n      minZoom: 1,\n      name: dataLayer,\n      tileSize: new google.maps.Size(256, 256),\n      opacity: 0.5\n    };\n    const imageMapType = new google.maps.ImageMapType(layerOptions);\n    if (!isDateRange) {\n      this.map.overlayMapTypes.clear();\n    } else {\n      const overlays = this.getMapOverlay().getArray() as google.maps.ImageMapType[];\n      overlays.forEach((val: google.maps.ImageMapType, idx) => {\n        if (idx > 0) {\n          val.setOpacity(0);\n        } else {\n          val.setOpacity(0.5);\n        }\n      });\n    }\n    this.map.overlayMapTypes.push(imageMapType);\n  }\n\n  setGeoJSONData(geoData): void {\n    this.map.data.loadGeoJson(geoData);\n  }\n\n  setGeoJSONStylesData(options): void {\n    this.map.data.setStyle(options);\n  }\n\n  setGeocodingUIConf(inputEl): void {\n    this.searchBox = new google.maps.places.SearchBox(inputEl);\n    this.map.addListener('bounds_changed', () => {\n      this.searchBox.setBounds(this.map.getBounds());\n    });\n    this.searchBox.addListener('places_changed', () => {\n      const places = this.searchBox.getPlaces();\n      if (places.length === 0) {\n        return;\n      }\n      this.clearGeoCodingMarkers();\n\n      // For each place, get the icon, name and location.\n      const bounds = new google.maps.LatLngBounds();\n      places.forEach((place) => {\n        if (!place.geometry) {\n          console.log('Returned place contains no geometry');\n          return;\n        }\n\n        // Create a marker for each place.\n        // this.geoCodingMarkers.push(new google.maps.Marker({\n        //   map: this.map,\n        //   title: place.name,\n        //   position: place.geometry.location\n        // }));\n\n        if (place.geometry.viewport) {\n          // Only geocodes have viewport.\n          bounds.union(place.geometry.viewport);\n        } else {\n          bounds.extend(place.geometry.location);\n        }\n\n      });\n      this.map.fitBounds(bounds);\n      // this.sendNearestCryosphereData();\n    });\n  }\n\n  setImageLayerDataByYears() {\n    const layerName = 'SMAP_L4_Frozen_Area';\n    const minDateStr = this.layerConf[layerName].minDate;\n    const validDatStr = minDateStr.split('/').join('-');\n    const minDate = new Date(`${validDatStr}T00:00:00`);\n    const currentDate = new Date();\n    currentDate.setDate(7);\n    currentDate.setHours(0);\n    currentDate.setMinutes(0);\n    currentDate.setSeconds(0);\n    currentDate.setMilliseconds(0);\n    this.yearSet = [];\n    while (minDate < currentDate) {\n      const year = minDate.getFullYear();\n      this.yearSet.push(year);\n      if (year === currentDate.getFullYear()) {\n        minDate.setDate(currentDate.getDate());\n        minDate.setMonth(currentDate.getMonth());\n      }\n      const monthVal = minDate.getMonth() + 1;\n      const monthText = monthVal < 10 ? `0${monthVal}` : monthVal;\n      const dateVal = minDate.getDate();\n      const dateTxt = dateVal < 10 ? `0${dateVal}` : dateVal;\n      const dateStr = minDate.getFullYear() + '-' + monthText + '-' + dateTxt;\n      this.setImageLayer(layerName, dateStr, true);\n      minDate.setFullYear(year + 1);\n    }\n  }\n\n  setMapClickEv() {\n    this.map.addListener('click', (ev) => {\n      const latLng = ev.latLng;\n      this.clearGeoCodingMarkers();\n      this.geoCodingMarkers.push(new google.maps.Marker({\n        map: this.map,\n        position: latLng\n      }));\n      this.sendNearestCryosphereData();\n    });\n  }\n\n  private loadScriptLoadingPromise() {\n    const script = window.document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    const callbackName = 'initMap';\n    script.src = getScriptSrc(callbackName);\n    this.scriptLoadingPromise = new Promise<any>((resolve: Function, reject: Function) => {\n      (<any>window)[callbackName] = () => { resolve(); };\n\n      script.onerror = (error: Event) => { reject(error); };\n    });\n    window.document.body.appendChild(script);\n  }\n}\n","import { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebService {\n  baseUrl = 'http://172.26.40.87:8080/cryosphere/rest';\n  constructor(private http: Http) { }\n  sendCryosphereData(data) {\n    const url = `${this.baseUrl}/maps/getNearestCryosphere`;\n    return this.http.post(url, data);\n  }\n  sendCryosphereDataByYear() {\n    const url = `${this.baseUrl}/maps/calculatePercentages`;\n    return this.http.get(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}